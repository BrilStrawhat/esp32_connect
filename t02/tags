!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	//
BUF_SIZE	components/uart_console/uart_console.h	/^#define BUF_SIZE /;"	d
CMD_SIZE	components/uart_console/uart_console.h	/^#define CMD_SIZE /;"	d
DEL_SEQ	components/uart_console/uart_console.h	/^#define DEL_SEQ /;"	d
Hello World Example	README.md	/^# Hello World Example$/;"	c
LEFT_ARR	components/uart_console/uart_console.h	/^#define LEFT_ARR /;"	d
LEFT_SEQ	components/uart_console/uart_console.h	/^#define LEFT_SEQ /;"	d
MAX_RECONNECT_TRY	components/wifi/wifi.c	/^#define MAX_RECONNECT_TRY /;"	d	file:
NL_SEQ	components/uart_console/uart_console.h	/^#define NL_SEQ /;"	d
RIGHT_ARR	components/uart_console/uart_console.h	/^#define RIGHT_ARR /;"	d
RIGHT_SEQ	components/uart_console/uart_console.h	/^#define RIGHT_SEQ /;"	d
TAG	components/http_client/http_client.c	/^static const char *TAG = "HTTP_CLIENT";$/;"	v	typeref:typename:const char *	file:
TAG	components/uart_console/uart_console.c	/^static const char *TAG = "uart_events";$/;"	v	typeref:typename:const char *	file:
TAG	components/wifi/wifi.c	/^static const char *TAG = "wifi station";$/;"	v	typeref:typename:const char *	file:
UART_NUM	components/uart_console/uart_console.h	/^#define UART_NUM /;"	d
UART_RX	components/uart_console/uart_console.h	/^#define UART_RX /;"	d
UART_TX	components/uart_console/uart_console.h	/^#define UART_TX /;"	d
WIFI_CONNECTED_BIT	components/wifi/wifi.h	/^#define WIFI_CONNECTED_BIT /;"	d
WIFI_CREDENTIAL_DELIM	components/wifi/wifi.c	/^#define WIFI_CREDENTIAL_DELIM /;"	d	file:
WIFI_FAIL_BIT	components/wifi/wifi.h	/^#define WIFI_FAIL_BIT /;"	d
WIFI_STA_CONNECT_COMMAND	components/wifi/wifi.h	/^#define WIFI_STA_CONNECT_COMMAND /;"	d
_HTTP_CLIENT_H_	components/http_client/http_client.h	/^#define _HTTP_CLIENT_H_$/;"	d
_LIST_H_	components/list/list.h	/^#define _LIST_H_$/;"	d
_UART_CONSOLE_H_	components/uart_console/uart_console.h	/^#define _UART_CONSOLE_H_$/;"	d
_WIFI_H_	components/wifi/wifi.h	/^#define _WIFI_H_$/;"	d
add_cmd	components/uart_console/uart_console.c	/^void add_cmd(char *cmd_name, void *(*cmd_handler)(void *argc)) {$/;"	f	typeref:typename:void
app_main	main/t01.c	/^void app_main(void)$/;"	f	typeref:typename:void
backspace	components/uart_console/uart_console.c	/^static void backspace(uint8_t *cursor, char *command) {$/;"	f	typeref:typename:void	file:
clear_cmd_list	components/uart_console/uart_console.c	/^void clear_cmd_list() {$/;"	f	typeref:typename:void
cmd_handler	components/uart_console/uart_console.h	/^    void *(*cmd_handler)(void *argc);$/;"	m	struct:s_console_cmd	typeref:typename:void * (*)(void * argc)
cmd_list	components/uart_console/uart_console.c	/^static t_list *cmd_list = NULL;$/;"	v	typeref:typename:t_list *	file:
cmd_name	components/uart_console/uart_console.h	/^    char *cmd_name;$/;"	m	struct:s_console_cmd	typeref:typename:char *
console_task	components/uart_console/uart_console.c	/^static void console_task(void *pvParameters) {$/;"	f	typeref:typename:void	file:
data	components/list/list.h	/^    void *data;$/;"	m	struct:s_list	typeref:typename:void *
echo_cmd	components/http_client/http_client.c	/^static void echo_cmd(char *host, uint32_t port, char *message, uint8_t repeat) {$/;"	f	typeref:typename:void	file:
enter_button	components/uart_console/uart_console.c	/^static void enter_button(char *command) {$/;"	f	typeref:typename:void	file:
error	components/http_client/http_client.c	/^static void error(const char *msg) { ESP_LOGE(TAG, "%s", msg); }$/;"	f	typeref:typename:void	file:
event_handler	components/wifi/wifi.c	/^static void event_handler(void* arg, esp_event_base_t event_base,$/;"	f	typeref:typename:void	file:
exec_cmd_by_name	components/uart_console/uart_console.c	/^bool exec_cmd_by_name(t_list *cmd_list, char *name, char *args) {$/;"	f	typeref:typename:bool
http	components/http_client/http_client.c	/^void *http(void *arg) {$/;"	f	typeref:typename:void *
http_client	components/http_client/http_client.c	/^static uint8_t http_client(char *host, uint32_t port, char *message) {$/;"	f	typeref:typename:uint8_t	file:
init_uart_console	components/uart_console/uart_console.c	/^void init_uart_console(uart_config_t *uart_config, uint8_t console_priority) {$/;"	f	typeref:typename:void
move_arrow	components/uart_console/uart_console.c	/^static void move_arrow(uint8_t *cursor, char *command, uint32_t dtmp) {$/;"	f	typeref:typename:void	file:
mx_create_node	components/list/list.c	/^t_list *mx_create_node(void *data) {$/;"	f	typeref:typename:t_list *
mx_list_foreach	components/list/list.c	/^void mx_list_foreach(t_list *head, void (funct)(void*)) {$/;"	f	typeref:typename:void
mx_list_size	components/list/list.c	/^int mx_list_size(t_list *list) {$/;"	f	typeref:typename:int
mx_pop_back	components/list/list.c	/^void mx_pop_back(t_list **head) {$/;"	f	typeref:typename:void
mx_pop_front	components/list/list.c	/^void mx_pop_front(t_list **head) {$/;"	f	typeref:typename:void
mx_push_back	components/list/list.c	/^void mx_push_back(t_list **list, void *data) {$/;"	f	typeref:typename:void
mx_push_front	components/list/list.c	/^void mx_push_front(t_list **list, void *data) {$/;"	f	typeref:typename:void
next	components/list/list.h	/^    struct s_list *next;$/;"	m	struct:s_list	typeref:struct:s_list *
printchar	components/uart_console/uart_console.c	/^static void printchar(uint8_t *cursor, char *command, char *dtmp, uart_event_t *event) {$/;"	f	typeref:typename:void	file:
put_char_under_cursor	components/uart_console/uart_console.c	/^static void put_char_under_cursor(uint8_t *cursor, char *command, char ch) {$/;"	f	typeref:typename:void	file:
s_console_cmd	components/uart_console/uart_console.h	/^typedef struct s_console_cmd {$/;"	s
s_list	components/list/list.h	/^typedef struct s_list {$/;"	s
s_retry_num	components/wifi/wifi.c	/^static uint8_t s_retry_num = 0;$/;"	v	typeref:typename:uint8_t	file:
s_wifi_event_group	components/wifi/wifi.c	/^static EventGroupHandle_t s_wifi_event_group = NULL;$/;"	v	typeref:typename:EventGroupHandle_t	file:
strjoin_with_delim	components/wifi/wifi.c	/^char *strjoin_with_delim(char *s1, char *s2, char delim) {$/;"	f	typeref:typename:char *
t03	CMakeLists.txt	/^project(t03)$/;"	p
t_console_cmd	components/uart_console/uart_console.h	/^} t_console_cmd;$/;"	t	typeref:struct:s_console_cmd
t_list	components/list/list.h	/^} t_list;$/;"	t	typeref:struct:s_list
uart0_queue	components/uart_console/uart_console.c	/^static QueueHandle_t uart0_queue;$/;"	v	typeref:typename:QueueHandle_t	file:
uart_print_nl	components/uart_console/uart_console.c	/^void uart_print_nl() {$/;"	f	typeref:typename:void
uart_printstr	components/uart_console/uart_console.c	/^void uart_printstr(char *str) {$/;"	f	typeref:typename:void
wifi_connect_nvs	components/wifi/wifi.c	/^uint8_t wifi_connect_nvs(void) {$/;"	f	typeref:typename:uint8_t
wifi_init_sta	components/wifi/wifi.c	/^static void wifi_init_sta(char *ssid, char *passwd) {$/;"	f	typeref:typename:void	file:
wifi_print_success_message	components/wifi/wifi.c	/^void wifi_print_success_message(void) {$/;"	f	typeref:typename:void
wifi_set_last_ssid	components/wifi/wifi.c	/^void wifi_set_last_ssid(char *ssid, char *passwd) {$/;"	f	typeref:typename:void
wifi_sta_connect	components/wifi/wifi.c	/^void *wifi_sta_connect(void *arg) {$/;"	f	typeref:typename:void *
